plugins {
    id("com.starter.config")
    id("com.starter.versioning")
}

commonConfig {
    javaFilesAllowed false
    javaVersion JavaVersion.VERSION_1_8
}

allprojects {
    pluginManager.withPlugin("kotlin") { plugin ->
        def kotlinVersion = plugins.getPlugin("kotlin").kotlinPluginVersion
        configurations.configureEach {
            resolutionStrategy.eachDependency {
                if (requested.group == 'org.jetbrains.kotlin' && requested.name.startsWith("kotlin")) {
                    useVersion kotlinVersion
                }
            }
        }
    }
    tasks.withType(Test).configureEach {
        doLast {
            Thread.sleep(2000) // https://github.com/gradle/gradle/issues/16603
        }
    }

    pluginManager.withPlugin("java") {
        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(JavaVersion.VERSION_17.toString())
            }
        }

        if (project.hasProperty("skipJarVersion")) {
            tasks.named("jar") {
                archiveFile.set(new File(project.buildDir, "libs/${project.name}.jar"))
            }
        }
    }
}
